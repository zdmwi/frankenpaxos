syntax = "proto2";

package frankenpaxos.paxos;

import "scalapb/scalapb.proto";

option (scalapb.options) = {
  package_name: "frankenpaxos.paxos"
  flat_package: true
  preserve_unknown_fields: false
};

// Messages sent between clients and leaders.
message ProposeRequest {
  required string v = 1;
}

message ProposeReply {
  required string chosen = 1;
}

// Messages sent between propsers and acceptors.
message Phase1a {
  required int32 round = 1;
}

message Phase1b {
  required int32 round = 1;
  required int32 acceptor_id = 2;
  required int32 vote_round = 3;
  optional string vote_value = 4;
}

message Phase2a {
  required int32 round = 1;
  required string value = 2;
}

message Phase2b {
  required int32 acceptor_id = 1;
  required int32 round = 2;
}

// Paxos client inbound message.
message ClientInbound {
  oneof request {
    ProposeReply propose_reply = 1;
  }
}

// Paxos leader inbound message.
message LeaderInbound {
  oneof request {
    ProposeRequest propose_request = 1;
    Phase1b phase1b = 2;
    Phase2b phase2b = 3;
  }
}

// Paxos acceptor inbound message.
message AcceptorInbound {
  oneof request {
    Phase1a phase1a = 1;
    Phase2a phase2a = 2;
  }
}
